name: Linting for evendemy

on: push 

jobs: 
    dummy:
        runs-on: ubuntu-latest
        steps:
            - name: dummy output
              run: |
                echo "I am a dummy output. Linting is not done yet and would send an email if I fail"

#   linting-frontend:
#       runs-on: ubuntu-latest
#       steps:
#           - uses: actions/checkout@v3
#           - uses: actions/setup-node@v3
#             with:
#               node-version: 18.x

#           - name: Get npm cache directory
#             id: npm-cache-dir
#             shell: bash
#             run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
#           
#           - name: Check cache
#             uses: actions/cache@v3
#             id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
#             with:
#               path: ${{ steps.npm-cache-dir.outputs.dir }}
#               key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#               restore-keys: |
#                 ${{ runner.os }}-node-
#             
#               
#           - name: npm install and lint in backend
#             run: |
#               cd webapp 
#               npm install
#               npm run lint
#                   
#   linting-backend:
#       runs-on: ubuntu-latest
#       steps:
#           - uses: actions/checkout@v3
#           - uses: actions/setup-node@v3
#             with:
#               node-version: 18.x
#                   
#           - name: Get npm cache directory
#             id: npm-cache-dir
#             shell: bash
#             run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
#           
#           - name: Check cache
#             uses: actions/cache@v3
#             id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
#             with:
#               path: ${{ steps.npm-cache-dir.outputs.dir }}
#               key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#               restore-keys: |
#                 ${{ runner.os }}-node-
#             
#               
#           - name: npm install and lint in backend
#             run: |
#               cd backend 
#               npm install
#               npm run lint
